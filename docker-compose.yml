version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: bloxapi:latest
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/bloxapi
      - REDIS_URL=redis://redis:6379/0
      - CACHE_TYPE=redis
      - CACHE_REDIS_URL=redis://redis:6379/0
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_DEFAULT=60
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - bloxapi-network

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bloxapi
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bloxapi-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bloxapi-network

  # Pgadmin for database management (optional, development only)
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@bloxapi.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - bloxapi-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  bloxapi-network:
    driver: bridge